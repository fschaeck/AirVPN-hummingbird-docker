name: Build and Publish AirVPN hummingbird Image

on:
  # run it on push to the default repository branch
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Prepare
        id: prep
        run: |
          IMAGE_NAME=airvpn-hummingbird
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}
          GHCR_IMAGE=ghcr.io/${{ github.actor }}/${IMAGE_NAME}
          # If this is a version git tag
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            # use the tag's version part as a docker tag together with 'latest'
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest,${GHCR_IMAGE}:${VERSION},${GHCR_IMAGE}:latest"
          else
            # otherwise use just the commit id as tag
            SHORTREF=${GITHUB_SHA::8}
            TAGS="${DOCKER_IMAGE}:${SHORTREF},${GHCR_IMAGE}:${SHORTREF}"
          fi
          echo "Pusing images ${TAGS}"
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
    
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Packages
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
          
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
